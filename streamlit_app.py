import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from sklearn.linear_model import LinearRegression
from io import BytesIO
import chardet

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(layout="wide", page_title="–î–µ–º–æ–≥—Ä–∞—Ñ–∏—è –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏")

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

# 3. –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏
if "–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏" in analysis_options and selected_topic != "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏":
    st.subheader("üìà –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏")
    
    try:
        df_invest = data_dict["–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"][0]
        merged_df = pd.merge(
            df_topic, df_invest,
            on='Name',
            suffixes=('_demo', '_invest'))
        
        last_year = '2024'
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π scatter plot
        fig_corr = px.scatter(
            merged_df,
            x=f"{last_year}_demo",
            y=f"{last_year}_invest",
            hover_name="Name",
            labels={
                f"{last_year}_demo": f"{selected_topic}",
                f"{last_year}_invest": "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"
            },
            color_discrete_sequence=[color]
        )
        
        # –†—É—á–Ω–æ–π —Ä–∞—Å—á–µ—Ç –ª–∏–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–∞
        x = merged_df[f"{last_year}_demo"].values
        y = merged_df[f"{last_year}_invest"].values
        if len(x) > 1:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫
            coefficients = np.polyfit(x, y, 1)
            trendline = np.poly1d(coefficients)
            x_trend = np.linspace(x.min(), x.max(), 100)
            
            fig_corr.add_trace(go.Scatter(
                x=x_trend,
                y=trendline(x_trend),
                mode='lines',
                name='–õ–∏–Ω–∏—è —Ç—Ä–µ–Ω–¥–∞',
                line=dict(color='grey', dash='dash')
            ))
        
        # –í—ã–¥–µ–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
        if selected_location in merged_df['Name'].values:
            selected_data = merged_df[merged_df['Name'] == selected_location]
            fig_corr.add_trace(go.Scatter(
                x=selected_data[f"{last_year}_demo"],
                y=selected_data[f"{last_year}_invest"],
                name=selected_location,
                mode='markers',
                marker=dict(size=12, color='red')
            ))
        
        fig_corr.update_layout(height=500)
        st.plotly_chart(fig_corr, use_container_width=True)
        
        # –†–∞—Å—á–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
        if len(x) > 1:
            corr_coef = np.corrcoef(x, y)[0, 1]
            st.info(f"""
            **–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏**: {corr_coef:.2f}
            - –ë–ª–∏–∑–∫–æ –∫ 1: –°–∏–ª—å–Ω–∞—è –ø—Ä—è–º–∞—è —Å–≤—è–∑—å
            - –ë–ª–∏–∑–∫–æ –∫ 0: –ù–µ—Ç —Å–≤—è–∑–∏
            - –ë–ª–∏–∑–∫–æ –∫ -1: –°–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            """)
        else:
            st.warning("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏")
            
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏: {str(e)}")
# 4. –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
with st.expander("üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö"):
    tab1, tab2 = st.tabs(["CSV", "Excel"])
    
    with tab1:
        st.download_button(
            "–°–∫–∞—á–∞—Ç—å –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (CSV)",
            df_topic.to_csv(index=False).encode('utf-8'),
            f"{selected_topic}.csv",
            "text/csv"
        )
    
    with tab2:
        output = BytesIO()
        with pd.ExcelWriter(output, engine='openpyxl') as writer:
            df_topic.to_excel(writer, sheet_name=selected_topic[:30])
            investments.to_excel(writer, sheet_name="–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏")
        st.download_button(
            "–°–∫–∞—á–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (Excel)",
            output.getvalue(),
            "–¥–µ–º–æ–≥—Ä–∞—Ñ–∏—è_–∏_–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.xlsx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
